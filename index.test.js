const { NumberUtils, JsonUtils } = require('./index')
test('isNumber', () => {
    expect(NumberUtils.thousandths(1)).toBe('1.00')
    expect(NumberUtils.thousandths(1, 0)).toBe('1')
    expect(NumberUtils.thousandths(123)).toBe('123.00')
    expect(NumberUtils.thousandths(123123)).toBe('123,123.00')
    expect(NumberUtils.thousandths(-123123)).toBe('-123,123.00')
    expect(NumberUtils.thousandths(54.23 * 54.22)).toBe('2,940.35')
    expect(NumberUtils.thousandths(-89.36 * 56.58)).toBe('-5,055.99')
    expect(NumberUtils.thousandths(-89.36 * 56.58, 0)).toBe('-5,056')
    expect(NumberUtils.ifNaN('asd', 1)).toBe(1)
    expect(NumberUtils.ifNaN('123', 1)).toBe(123)
    expect(NumberUtils.ifNaN('123a', 1)).toBe(1)
    expect(NumberUtils.ifNaN('123a', 1)).toBe(1)

    expect(JsonUtils.toJSONArray("{\"1\":1}")).toStrictEqual([])
    expect(JsonUtils.toJSONArray(123)).toStrictEqual([])
    expect(JsonUtils.toJSONArray([1, 2, 3])).toStrictEqual([1, 2, 3])
    expect(JsonUtils.toJSONArray('[3,2,1]')).toStrictEqual([3, 2, 1])

    expect(JsonUtils.toJSONObject([3, 2, 1])).toStrictEqual({})
    expect(JsonUtils.toJSONObject({ a: 1, b: 2 })).toStrictEqual({ b: 2, a: 1 })
    expect(JsonUtils.toJSONObject('{ "a": 1, "b": 2 }')).toStrictEqual({ b: 2, a: 1 })
    expect(JsonUtils.toJSONObject('{ "a": 1, "b": 2, }')).toStrictEqual({})

    expect(JsonUtils.optionalChaining({a:1}, 'a')).toBe(1)
    expect(JsonUtils.optionalChaining([1,2,3], '0')).toBe(1)
    expect(JsonUtils.optionalChaining([1,2,3], '2')).toBe(3)
    expect(JsonUtils.optionalChaining({a:{b:{c:'123'}}}, 'a.b.c')).toBe('123')

    expect(NumberUtils.summation([1,2,3])).toBe(6)
    expect(NumberUtils.summation([1,'1',3])).toBe(5)
    expect(NumberUtils.summation([1,'1a',3])).toBe(4)
    expect(NumberUtils.summation([])).toBe(0)

})
